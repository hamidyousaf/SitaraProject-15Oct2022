@model Numbers.Entity.Models.Sys_Vacation_Rule
@{
    ViewData["Title"] = "Approval Vacation Rule";
    ViewData["CurrentPage"] = "Approval Vacation Rule";
}
@section customCSS{
    <link href="~/css/plugins/jsGrid/jsgrid.css" rel="stylesheet" />
    <link href="~/css/plugins/jsGrid/jsgrid-theme.css" rel="stylesheet" />
    <style>
        .jsgrid-grid-body {
            height: auto !important;
        }

        .hide {
            display: none;
        }
    </style>
}
<div class="col-lg-12">
    <div class="ibox float-e-margins">
        @*<div class="ibox-title">
                <h5>@ViewBag.EntityState Application Configuration</h5>
                <span class="label label-success pull-right status"></span>
            </div>*@
        <div class="ibox-content">
            <form class="form-horizontal" method="post" id="approvalvac" asp-action="Submit">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <div class="row">
                    <div class="col-md-10">
                        <div id="jsGrid">
                            Test
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-2">
                        <input type="hidden" name="deletedIds" id="deletedIds" />
                        <input type="submit" value="Submit" class="btn btn-primary" asp-action="Create" asp-controller="ApprovalVacation" />
                    </div>
                </div>
            </form>
        </div>
    </div>

</div>
@section customJS{
    <script src="~/lib/jsGrid/jsgrid.js"></script>
    <script>
        $(function () {                var MyDateField = function (config) {
                    jsGrid.Field.call(this, config);
                };
                MyDateField.prototype = new jsGrid.Field({
                    sorter: function (date1, date2) {
                        return new Date(date1) - new Date(date2);
                    },
                    itemTemplate: function (value) {
                        return new Date(value).toDateString();
                    },
                    insertTemplate: function (value) {
                        return this._insertPicker = $("<input>").datepicker({ defaultDate: new Date() });
                    },
                    editTemplate: function (value) {
                        return this._editPicker = $("<input>").datepicker().datepicker("setDate", new Date(value));
                    },
                    insertValue: function () {
                        return this._insertPicker.datepicker("getDate").toISOString();
                    },
                    editValue: function () {
                        return this._editPicker.datepicker("getDate").toISOString();
                    }
                });
                jsGrid.fields.myDateField = MyDateField;
                var User =@Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(ViewBag.User));
                var Vacation =@Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(ViewBag.Vacation));
                $("#jsGrid").jsGrid({
                    width: "100%",
                    height: "auto",
                    filtering: false,
                    sorting: false,
                    editing: true,
                    paging: false,
                    autoload: true,
                    inserting: true,
                    pageSize: 10,
                    pageButtonCount: 5,
                    deleteConfirm: "Do you really want to delete?",
                    data: Vacation,
                    fields: [
                        { name: "Id", type: "text", width: 0, visible: false },
                        { name: "FromUserId", type: "select", items: User, valueField: "Id", textField: "UserName", title: "From User", validate: "required", width: 150 },
                        { name: "ToUserId", type: "select", items: User, valueField: "Id", textField: "UserName", title: "To User", validate: "required", width: 150 },
                        { name: "StartDate", type: "myDateField", title: "Start Date", width: 150 },
                        { name: "EndDate", type: "myDateField", title: "End Date", width: 150 },
                        {
                            name: "IsActive", type: "checkbox", title: "Active",
                            insertTemplate: function () { //By default True
                                var input = this.__proto__.insertTemplate.call(this);
                                input[0].checked = true;
                                return input;
                            }
                        },
                        { type: "control" }
                    ],
                    onItemDeleted: function (arg) {
                        debugger
                        var deletedId = $("input[name=deletedIds]").val();
                        if (deletedId == "")
                            $("input[name=deletedIds]").val(arg.item.Id);
                        else {
                            $("input[name=deletedIds]").val(deletedId.concat(",", arg.item.Id));
                        }
                    },
                })
            
            });
        
        $("#approvalvac").submit(function (event) {
            debugger
            /* stop form from submitting normally */
            event.preventDefault();

            var data = $("#jsGrid").jsGrid("option", "data");
            var deleteIds = $("#deletedIds").val();
            /* get the action attribute from the <form action=""> element */
            var $form = $(this),
                url = $form.attr('action');
            /* Send the data using post with element id name and name2*/
            var posting = $.post(url, { data: JSON.stringify(data), deletedIds: deleteIds });
            /* Alerts the results */
            posting.done(function (data) {
                toasterMessage(false, "Values has been saved");
            });
                window.location.reload(true);
        });

    </script>

}