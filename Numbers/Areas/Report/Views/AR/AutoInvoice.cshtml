
@{
    ViewData["Title"] = "Reports";
    ViewData["CurrentPage"] = "Reports";

    var companyName = Context.Session.GetString("CompanyName");
    var companyId = Context.Session.GetInt32("CompanyId").Value;
}

<div class="col-lg-12">
    <div class="ibox">
        <div class="ibox-content">
            <div class="row">
                <div class="col-lg-12">
                    <form id="report" class="form-horizontal" method="post">
                        <input type="hidden" name="ReportTitle" value="SalesInvoiceDateWise" />
                        <input type="hidden" name="CompanyName" value="@companyName" />
                        <input type="hidden" name="CompanyId" value="@companyId" />
                        
                        <div class="row">
                            <div class="col-lg-5 col-sm-12">
                                <div class="row">
                                    <div class="col-lg-6 col-sm-6" id="divStartDate">
                                        <div class="form-group">
                                            <label>Start Date</label>
                                            <div class="input-group date">
                                                <span class="input-group-addon"><i class="fa fa-calendar"></i></span>
                                                <input class="form-control custom-date-picker" data-validation="required" type="text" id="StartDate" name="StartDate" value=@CommonHelper.CurrentDate />
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-lg-6 col-sm-6" id="divEndDate">
                                        <div class="form-group">
                                            <label>End Date</label>
                                            <div class="input-group date">
                                                <span class="input-group-addon"><i class="fa fa-calendar"></i></span>
                                                <input class="form-control custom-date-picker" data-validation="required" type="text" id="EndDate" name="EndDate" value=@CommonHelper.CurrentDate />
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-lg-3 col-sm-6">
                                <div class="form-group">
                                    <label>Select by Cities</label>
                                    <div class="input-group col-lg-12">
                                        <select name="Cities" id="Cities" class="form-control" asp-items="@ViewBag.Cities">
                                            <option value="0" selected="selected">Select All</option>
                                        </select>
                                    </div>
                                </div>
                            </div>
                            <div class="col-lg-3 col-sm-12">
                                <div class="form-group">
                                    <label>Item Category</label>
                                    <Select for="ItemCategoryId" asp-items="@ViewBag.SecondLevelCategoryLOV" onchange="GetThirdLevel(); GetCustomer()" id="Cat_Id" name="Cat_Id" class="form-control" data-validation="required" data-validation-error-msg="Category is required" data-validation-error-msg-container="#dCat">
                                        <option value="0" selected="selected">Select All</option>
                                    </Select>
                                    <p id="dCat"></p>
                                </div>
                            </div>

                            <div class="col-lg-3 col-sm-12">
                                <div class="form-group">
                                    <label for="CustomerId">Customer</label>
                                    <Select for="CustomerId" required id="CustId" name="CustId" class="form-control">
                                        <option value="0" selected="selected">Select All</option>
                                    </Select>
                                </div>
                            </div>

                        </div>
                        
                        <div class="row">
                            <div class="text-left">
                                <input type="button" value="Preview" class="btn btn-primary" onclick="return generateReport();" />
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

<script src="~/js/jquery-3.1.1.min.js"></script>
<script src="~/lib/dualListbox/jquery.bootstrap-duallistbox.js"></script>
<script>


    function GetThirdLevel() {
                debugger
        var secondLevel = $('#Cat_Id').val();
        $.ajax({
            type: 'GET',
            url: '/AR/SaleOrder/GetFourthLevel?id=' + secondLevel
        }).then(function (data) {
            var thirdCat = $("#FourthCat");
            thirdCat.empty();
            for (var i = 0; i < data.length; i++) {
                //console.log(data[i].name);
                thirdCat.append($("<option />").val(data[i].value).text(data[i].text));
            }
        });
    }

    function GetCustomer() {
        debugger

        $('#CustId').find('option').not(':first').remove();
        $('#Item').find('option').not(':first').remove();
        //  $('#CustomerId').remove();
        // $('#CustomerId').val(0).trigger('change.select2');
        var CategoryId = $("#Cat_Id").find(":selected").val();
        var CityId = $("#Cities").find(":selected").val();
        //if (ProductId == "0") {
        //    swal("", "Please Select Product Type!", "warning")
        //    return false;
        //}
        //else if (CategoryId == "0") {
        //    swal("", "Please Select Category!", "warning")
        //    return false;
        //}

        $.ajax({
            method: "GET",
            url: '/AR/SaleOrder/GetCustomersByCity',
            data: { CityId,CategoryId }
        }).done(function (data) {
            debugger;
            $.each(data.customers, function (i, item) {
                debugger;
                $('#CustId').append($('<option>', {
                    value: item.id,
                    text: item.id + " - " + item.name + " - " + ((item.address != null) ? item.address : "Address Not Avaiable")
                }));
            });

           
        });

    }

    $(document).ready(function () {

        $('#Cities').select2();
        $('#Cat_Id').select2();
        $('#CustId').select2();
    });

    //$('#ReportTitle').change(function () {
    //    var ReportTitle = $('#ReportTitle').val();

    //    if (ReportTitle == "CustomerWiseSalesSummary") {
    //        $('#typehead').css("display", "block");
    //    }
    //    else if (ReportTitle == "CustomerWiseOGP") {
    //        $('#vehicleNo').css("display", "block");
    //    }
    //    else {
    //        $('#typehead').css("display", "none");
    //    }

    //});

</script>

<script>
    //var byItems = $('select[name="Items"]').bootstrapDualListbox({

    //    selectorMinimalHeight: 160
    //});
    ////displays GetItems in dual-list-box
    //$.get('/Inventory/Api/GetItemsForReport').done(function (e) {
    //    debugger;
    //    var html = '';
    //    $.each(e, function (i, e) {
    //        html += '<option selected value="' + e.id + '"> ' + e.text + '</option>'
    //    });
    //    $('select[name="Items"]').html(html);
    //    byItems.bootstrapDualListbox('refresh');
    //});


    //category-wise
    //var byCategories = $('select[name="Categories"]').bootstrapDualListbox({
    //    selectorMinimalHeight: 160
    //});
    ////displays GetCategories in dual-list-box
    //$.get('/Inventory/Api/GetCategories').done(function (e) {
    //    var html = '';
    //    $.each(e, function (i, e) {
    //        html += '<option selected value="' + e.value + '"> ' + e.text + '</option>'
    //    });
    //    $('select[name="Categories"]').html(html);
    //    $('select[name="Categories"]').find("option").eq(0).remove();//this removes 1st option in selectList
    //    byCategories.bootstrapDualListbox('refresh');
    //});

    ////manufacture-wise
    //var byManufactures = $('select[name="Manufacturers"]').bootstrapDualListbox({
    //    selectorMinimalHeight: 160
    //});
    ////displays GetManufactures in dual-list-box
    //$.get('/Inventory/Api/GetManufactures').done(function (e) {
    //    var html = '';
    //    $.each(e, function (i, e) {
    //        html += '<option selected value="' + e.id + '"> ' + e.text + '</option>'
    //    });
    //    $('select[name="Manufacturers"]').html(html);
    //    byManufactures.bootstrapDualListbox('refresh');
    //});
</script>
<script>

    //saleperosn wise
    //var bySalesPerson = $('select[name="SalesPerson"]').bootstrapDualListbox({
    //    selectorMinimalHeight: 160,
    //});
    ////displays Items in dual-list-box
    //$.get('/AR/Api/GetSalesPersonForReport').done(function (e) {
    //    var html = '';
    //    $.each(e, function (i, e) {
    //        html += '<option selected value="' + e.id + '"> ' + e.text + '</option>'
    //    });
    //    $('select[name="SalesPerson"]').html(html);
    //    bySalesPerson.bootstrapDualListbox('refresh');
    //});
</script>
<script>
    ////by customers
    //var byCustomer = $('select[name="Customers"]').bootstrapDualListbox({
    //    selectorMinimalHeight: 160,
    //});
    ////displays Items in dual-list-box
    //$.get('/AR/Api/GetCustomersForReport').done(function (e) {
    //    var html = '';
    //    $.each(e, function (i, e) {
    //        html += '<option selected value="' + e.id + '"> ' + e.text + '</option>'
    //    });
    //    $('select[name="Customers"]').html(html);
    //    byCustomer.bootstrapDualListbox('refresh');
    //});

    //by cities
    //    var byCity= $('select[name="Cities"]').bootstrapDualListbox({
    //    selectorMinimalHeight: 160,
    //});
    // //displays Items in dual-list-box
    //    $.get('/AR/Api/GetCities').done(function (e) {
    //    var html = '';
    //    $.each(e, function (i, e) {
    //        html += '<option selected value="'+e.id+'"> '+e.text+'</option>'
    //    });
    //        $('select[name="Cities"]').html(html);
    //        byCity.bootstrapDualListbox('refresh');
    //    });
    //Customercategory-wise

</script>
<script>
    //var byCustomerCategories = $('select[name="CustomerCategory"]').bootstrapDualListbox({
    //    selectorMinimalHeight: 160
    //});
    ////displays GetCategories in dual-list-box
    //$.get('/AR/Api/GetAllCustomersCategories').done(function (e) {
    //    var html = '';
    //    $.each(e, function (i, e) {
    //        html += '<option selected value="' + e.id + '"> ' + e.text + '</option>'
    //    });
    //    $('select[name="CustomerCategory"]').html(html);
    //    /*  $('select[name="Customer Category"]').find("option").eq(0).remove();*///this removes 1st option in selectList
    //    byCustomerCategories.bootstrapDualListbox('refresh');
    //});
</script>

 




