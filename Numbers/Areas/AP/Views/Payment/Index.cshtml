@model IEnumerable<APPayment>
@{
    ViewData["Title"] = "List of Payment Invoices";
    ViewData["CurrentPage"] = "Supplier Payments";
}

<div class="row">
    <div class="col-lg-12">
        <div class="ibox float-e-margins">
            <div class="ibox-content">
                <div class="text-center">
                    <a asp-controller="Payment" asp-action="Create" class="btn btn-primary pull-left m-t-n-xs"> <strong> Create New </strong> </a>
                </div>
                <br />
                <br />
                <table id="Table" style="width:100%;" class="table table-bordered table-striped dataTables-example">
                    <thead>
                        <tr>
                            <th style="width:10%" class="searchHeader">@Html.DisplayNameFor(model => model.PaymentNo)</th>
                            <th style="width:10%" class="searchHeader"> @Html.DisplayNameFor(model => model.PaymentDate)</th>
                            <th style="width:18%" class="searchHeader"> @Html.DisplayNameFor(model => model.Supplier.Name) </th>
                            <th style="width:12%" class="searchHeader"> @Html.DisplayNameFor(model => model.PaymentMode) </th>
                            <th style="width:15%" class="searchHeader " > @Html.DisplayNameFor(model => model.TotalPaidAmount)</th>
                            <th style="width:15%" class="searchHeader "> @Html.DisplayNameFor(model => model.GrandTotal) </th>
                            <th style="width:10%" class="searchHeader"> @Html.DisplayNameFor(model => model.Status) </th>
                            <th style="width:10%" >Action</th>
                        </tr>
                    </thead>
                </table>
            </div>
        </div>
    </div>
</div>

@section customJS{
    <script>
        $(document).ready(function () {
            var table1 = $("#Table").DataTable({
                lengthMenu: [
                    [50, 100, 150, -1],
                    [50, 100, 150, 'All'],
                ],
                processing: true,
                serverSide: true,
                paging: true,
                filter: true,
                order: [[0, "desc"]],
                dom: "Blrtip",
                buttons: [
                    'copyHtml5',
                    'excelHtml5',
                    'csvHtml5',
                    'pdfHtml5'
                ],
                ajax: {
                    "url": "/AP/Payment/GetList",
                    "type": "POST",
                    "datatype": "json"
                },
                language: {
                    "decimal": "",
                    "emptyTable": "No data available in table",
                    "info": "Showing _START_ to _END_ of _TOTAL_ entries",
                    "infoEmpty": "Showing 0 to 0 of 0 entries",
                    "infoFiltered": "(filtered from _MAX_ total entries)",
                    "infoPostFix": "",
                    "thousands": ",",
                    "lengthMenu": "_MENU_",
                    "loadingRecords": "Loading...",
                    "processing": "Processing...",
                    "search": "Search:",
                    "zeroRecords": "No matching records found",
                    "paginate": {
                        "first": "First",
                        "last": "Last",
                        "next": "Next",
                        "previous": "Previous"
                    },
                    "aria": {
                        "sortAscending": ": activate to sort column ascending",
                        "sortDescending": ": activate to sort column descending"
                    }
                },
                columnDefs: [{
                    "targets": '_all',
                    "defaultContent": "-"
                }, { "orderable": false, "targets": [7] },
                    {
                        targets: [4, 5],
                        render: $.fn.dataTable.render.number(',', '.', 2, '')
                    }],
                columns: [
                    { "data": "payment.paymentNo", "name": "PaymentNo", className: "text-center" },
                    { "data": "payDate", "name": "PaymentDate", className: "text-center" },
                    { "data": "supplierName", "name": "SupplierId", className: "text-left" },
                    { "data": "payment.paymentMode.configValue", "name": "PaymentMode.ConfigValue", className: "text-center" },
                    { "data": "payment.totalPaidAmount", "name": "TotalPaidAmount", className: "text-right" },
                    { "data": "payment.grandTotal", "name": "GrandTotal", className: "text-right" },
                    { "data": "payment.status", "name": "Status", className: "text-center" },
                    {
                        "data": "payment",
                        "render": function (data, row) {
                            if (data.status != "Approved") {
                                if (data.approve == true) {
                                    return "<a href='/AP/Payment/Create?id=" + data.id + "' class='btn btn-sm btn-info m-t-n-xs'><i class='fa fa-edit' title='Edit'></i></a> <a href='/AP/Payment/Delete?id=" + data.id + "' class='btn btn-sm btn-danger m-t-n-xs'><i class='fa fa-trash-alt' title='Delete'></i></a>    <a  href='/AP/Payment/Approve?id=" + data.id + "' class='btn btn-sm btn-success m-t-n-xs'><i class='fa fa-thumbs-up'  title='Approve'></i></a>    <a href='@ViewBag.ReportPath" + data.voucherId + "' target='_blank' class='btn btn-sm btn-info m-t-n-xs'><i class='fa fa-print' title='Print Voucher'></i></a>";
                                } else {
                                    return "<a href='/AP/Payment/Create?id=" + data.id + "' class='btn btn-sm btn-info m-t-n-xs'><i class='fa fa-edit' title='Edit'></i></a> <a href='/AP/Payment/Delete?id=" + data.id + "' class='btn btn-sm btn-danger m-t-n-xs'><i class='fa fa-trash-alt' title='Delete'></i></a>    <a href='@ViewBag.ReportPath" + data.voucherId + "' target='_blank' class='btn btn-sm btn-info m-t-n-xs'><i class='fa fa-print' title='Print Voucher'></i></a>";
                                }
                            }
                            else {
                                return "<a href='/AP/Payment/Details?id=" + data.id + "' class='btn btn-sm btn-info m-t-n-xs'><i class='fa fa-search' title='View'></i></a> <a href='@ViewBag.ReportPath" + data.voucherId +"' target='_blank' class='btn btn-sm btn-info m-t-n-xs'><i class='fa fa-print' title='Print Voucher'></i></a>";
                            }

                        }
                    }
                ]
            })

            $('#Table thead th').each(function () {
                if ($(this).hasClass("searchHeader")) {
                    var title = $(this).text();
                    $(this).html('<span hidden>' + title + '</span><input type="text" style ="color: black;width: inherit;" placeholder="' + title + '" />');
                }
            });
            table1.columns().every(function () {
                var that = this; debugger
                var searchBox = $('input', this.header());
                searchBox.on('keyup change clear', function () {
                    that.search(this.value).draw()
                })
                searchBox.on('click', function (e) {
                    debugger
                    e.stopPropagation();
                });
            });




        });
    </script>
}