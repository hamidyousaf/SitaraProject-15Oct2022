// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Numbers.Entity.Models;

namespace Numbers.Migrations
{
    [DbContext(typeof(NumbersDbContext))]
    [Migration("20190320111643_BkgCashPurchaseSalePaymentReceipt")]
    partial class BkgCashPurchaseSalePaymentReceipt
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.1-servicing-10028")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<string>("Name")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<string>("RoleId")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<string>("UserId")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider");

                    b.Property<string>("ProviderKey");

                    b.Property<string>("ProviderDisplayName");

                    b.Property<string>("UserId")
                        .IsRequired();

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId");

                    b.Property<string>("RoleId");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId");

                    b.Property<string>("LoginProvider");

                    b.Property<string>("Name");

                    b.Property<string>("Value");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("Numbers.Models.AppAuditTrial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AfterValue");

                    b.Property<string>("BeforeValue");

                    b.Property<int?>("CompanyId");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Module")
                        .HasMaxLength(30);

                    b.Property<string>("SourceField")
                        .HasMaxLength(100);

                    b.Property<int>("TransactionId");

                    b.Property<string>("TransactionType")
                        .HasMaxLength(30);

                    b.Property<string>("UserFullName")
                        .HasMaxLength(50);

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("AppAuditTrials");
                });

            modelBuilder.Entity("Numbers.Models.AppCompany", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AddressLine1")
                        .HasMaxLength(100);

                    b.Property<string>("AddressLine2")
                        .HasMaxLength(100);

                    b.Property<string>("BlockReason")
                        .HasMaxLength(100);

                    b.Property<string>("City")
                        .HasMaxLength(30);

                    b.Property<string>("Country")
                        .HasMaxLength(30);

                    b.Property<int>("CreatedBy");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Email")
                        .HasMaxLength(50);

                    b.Property<string>("Fax")
                        .HasMaxLength(20);

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsBlock");

                    b.Property<string>("Logo")
                        .HasMaxLength(200);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("NationalTaxNumber")
                        .HasMaxLength(20);

                    b.Property<string>("Phone1")
                        .HasMaxLength(20);

                    b.Property<string>("Phone2")
                        .HasMaxLength(20);

                    b.Property<string>("SalesTaxNumber")
                        .HasMaxLength(20);

                    b.Property<int?>("UpdatedBy");

                    b.Property<DateTime?>("UpdatedDate");

                    b.HasKey("Id");

                    b.ToTable("AppCompanies");
                });

            modelBuilder.Entity("Numbers.Models.AppCompanyConfig", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanyId");

                    b.Property<string>("ConfigName")
                        .HasMaxLength(50);

                    b.Property<string>("ConfigValue")
                        .HasMaxLength(200);

                    b.Property<string>("Module")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("AppCompanyConfigs");
                });

            modelBuilder.Entity("Numbers.Models.AppCurrency", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(3);

                    b.Property<bool>("IsActive");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<short>("Sequence");

                    b.Property<string>("Symbol")
                        .HasMaxLength(5);

                    b.HasKey("Id");

                    b.ToTable("AppCurrencies");
                });

            modelBuilder.Entity("Numbers.Models.AppCurrencyExchangeRate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CompanyId");

                    b.Property<DateTime>("CraetedDate");

                    b.Property<int>("CreatedBy");

                    b.Property<string>("CurrencyId");

                    b.Property<DateTime>("EndDate");

                    b.Property<decimal>("ExchangeRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime>("StartDate");

                    b.Property<int>("UpdatedBy");

                    b.Property<DateTime>("UpdatedDate");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("CurrencyId");

                    b.ToTable("AppCurrencyExchangeRates");
                });

            modelBuilder.Entity("Numbers.Models.AppDocumentAttachment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("FileExtension")
                        .HasMaxLength(20);

                    b.Property<string>("FileName")
                        .HasMaxLength(300);

                    b.Property<string>("FilePath")
                        .HasMaxLength(300);

                    b.Property<int>("FileSize");

                    b.Property<string>("FileType")
                        .HasMaxLength(100);

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Module")
                        .HasMaxLength(50);

                    b.Property<string>("Tags")
                        .HasMaxLength(100);

                    b.Property<int>("TransactionId");

                    b.Property<string>("TransactionType")
                        .HasMaxLength(50);

                    b.Property<string>("UniqueFileName")
                        .HasMaxLength(400);

                    b.Property<int?>("UpdatedBy");

                    b.Property<DateTime?>("UpdatedDate");

                    b.HasKey("Id");

                    b.ToTable("AppDocumentAttachments");
                });

            modelBuilder.Entity("Numbers.Models.AppMenu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanyId");

                    b.Property<int>("CreatedBy");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<bool>("HasSubMenus");

                    b.Property<string>("IconClass")
                        .HasMaxLength(50);

                    b.Property<bool>("IsActive");

                    b.Property<int>("MenuLevel");

                    b.Property<string>("MenuType")
                        .HasMaxLength(10);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(70);

                    b.Property<int>("ParentId");

                    b.Property<int>("Sequence");

                    b.Property<int?>("UpdatedBy");

                    b.Property<DateTime?>("UpdatedDate");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.HasKey("Id");

                    b.ToTable("AppMenus");
                });

            modelBuilder.Entity("Numbers.Models.AppPackage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Module")
                        .HasMaxLength(100);

                    b.Property<int>("Name")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("AppPackages");
                });

            modelBuilder.Entity("Numbers.Models.AppPeriod", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasMaxLength(6);

                    b.Property<int>("CompanyId");

                    b.Property<int>("CreatedBy");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Description")
                        .HasMaxLength(50);

                    b.Property<DateTime>("EndDate");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("Date");

                    b.HasKey("Id");

                    b.ToTable("AppPeriods");
                });

            modelBuilder.Entity("Numbers.Models.AppRoleMenu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("MenuId");

                    b.Property<string>("RoleId")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("MenuId");

                    b.HasIndex("RoleId");

                    b.ToTable("AppRoleMenus");
                });

            modelBuilder.Entity("Numbers.Models.AppUserCompany", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanyId");

                    b.Property<bool>("IsDefault");

                    b.Property<string>("UserId")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("UserId");

                    b.ToTable("AppUserCompanies");
                });

            modelBuilder.Entity("Numbers.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AccessFailedCount");

                    //b.Property<int>("AppUserID")
                    //    .ValueGeneratedOnAdd()
                    //    .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<string>("Email")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed");

                    b.Property<string>("FullName")
                        .HasMaxLength(150);

                    b.Property<bool>("IsMaster");

                    b.Property<bool>("LockoutEnabled");

                    b.Property<DateTimeOffset?>("LockoutEnd");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash");

                    b.Property<string>("PhoneNumber");

                    b.Property<bool>("PhoneNumberConfirmed");

                    b.Property<string>("Photo")
                        .HasMaxLength(200);

                    b.Property<string>("SecurityStamp");

                    b.Property<bool>("TwoFactorEnabled");

                    b.Property<string>("UserName")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("Numbers.Models.BkgCashPurchaseSale", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("BookingDate");

                    b.Property<string>("BookingNo")
                        .IsRequired();

                    b.Property<string>("BookingRemarks")
                        .IsRequired()
                        .HasMaxLength(500);

                    b.Property<string>("BookingStatus")
                        .HasMaxLength(50);

                    b.Property<string>("ChassisNo")
                        .HasMaxLength(50);

                    b.Property<int>("CompanyId");

                    b.Property<int>("CreatedBy");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<int>("CustomerId");

                    b.Property<string>("EngineNo")
                        .HasMaxLength(50);

                    b.Property<decimal>("EstimatedPurchase");

                    b.Property<DateTime>("IGPDate");

                    b.Property<string>("IGPNo")
                        .HasMaxLength(50);

                    b.Property<string>("IGPStatus")
                        .HasMaxLength(50);

                    b.Property<string>("IssuanceRemarks")
                        .HasMaxLength(500);

                    b.Property<int>("ItemId");

                    b.Property<DateTime>("OGPDate");

                    b.Property<string>("OGPNo")
                        .HasMaxLength(50);

                    b.Property<string>("OGPStatus")
                        .HasMaxLength(50);

                    b.Property<decimal>("PaymentAmount");

                    b.Property<int>("PaymentBankAccount");

                    b.Property<string>("PaymentChequeNo")
                        .HasMaxLength(50);

                    b.Property<string>("PaymentRemarks")
                        .HasMaxLength(500);

                    b.Property<string>("PaymentStatus")
                        .HasMaxLength(50);

                    b.Property<DateTime>("PurchaseDate");

                    b.Property<string>("PurchaseParty")
                        .HasMaxLength(150);

                    b.Property<decimal>("PurchaseRate");

                    b.Property<string>("PurchaseRemarks")
                        .HasMaxLength(500);

                    b.Property<string>("ReceivingRemarks")
                        .HasMaxLength(500);

                    b.Property<string>("SalesCustomerCNIC")
                        .HasMaxLength(50);

                    b.Property<DateTime>("SalesDate");

                    b.Property<string>("SalesParty")
                        .HasMaxLength(150);

                    b.Property<int>("SalesPartyAccount");

                    b.Property<decimal>("SalesRate");

                    b.Property<string>("SalesRemarks")
                        .HasMaxLength(500);

                    b.Property<string>("SalesStatus")
                        .HasMaxLength(50);

                    b.Property<string>("Status")
                        .HasMaxLength(50);

                    b.Property<DateTime>("TransDate");

                    b.Property<int?>("UpdatedBy");

                    b.Property<DateTime?>("UpdatedDate");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("ItemId");

                    b.ToTable("BkgCashPurchaseSales");
                });

            modelBuilder.Entity("Numbers.Models.BkgCashPurchaseSalePayment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BkgCashPurchaseSaleId");

                    b.Property<int>("CreatedBy");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<int>("GLAccountId");

                    b.Property<decimal>("PaymentAmount");

                    b.Property<DateTime>("PaymentDate");

                    b.Property<string>("Reference")
                        .HasMaxLength(100);

                    b.Property<string>("Remarks")
                        .HasMaxLength(500);

                    b.Property<int?>("UpdatedBy");

                    b.Property<DateTime?>("UpdatedDate");

                    b.HasKey("Id");

                    b.ToTable("BkgCashPurchaseSalePayments");
                });

            modelBuilder.Entity("Numbers.Models.BkgCashPurchaseSaleReceipt", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BkgCashPurchaseSaleId");

                    b.Property<int>("CreatedBy");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<int>("GLAccountId");

                    b.Property<decimal>("ReceiptAmount");

                    b.Property<DateTime>("ReceiptDate");

                    b.Property<string>("Reference")
                        .HasMaxLength(100);

                    b.Property<string>("Remarks")
                        .HasMaxLength(500);

                    b.Property<int?>("UpdatedBy");

                    b.Property<DateTime?>("UpdatedDate");

                    b.HasKey("Id");

                    b.ToTable("BkgCashPurchaseSaleReceipts");
                });

            modelBuilder.Entity("Numbers.Models.BkgCommissionPayment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("AreaCommission");

                    b.Property<int>("BkgVehicleId");

                    b.Property<decimal>("BookingCommission");

                    b.Property<int>("CompanyId");

                    b.Property<int>("CreatedBy");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<decimal>("DeliveryCommission");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500);

                    b.Property<int>("GLAccountId");

                    b.Property<DateTime>("PaymentDate");

                    b.Property<string>("Status")
                        .HasMaxLength(50);

                    b.Property<int?>("UpdatedBy");

                    b.Property<DateTime?>("UpdatedDate");

                    b.HasKey("Id");

                    b.HasIndex("BkgVehicleId");

                    b.ToTable("BkgCommissionPayments");
                });

            modelBuilder.Entity("Numbers.Models.BkgCommissionReceived", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("AreaCommission");

                    b.Property<int>("BkgVehicleId");

                    b.Property<decimal>("BookingCommission");

                    b.Property<int>("CompanyId");

                    b.Property<int>("CreatedBy");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<decimal>("DeliveryCommission");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500);

                    b.Property<int>("GLAccountId");

                    b.Property<DateTime>("ReceivedDate");

                    b.Property<string>("Status")
                        .HasMaxLength(50);

                    b.Property<int?>("UpdatedBy");

                    b.Property<DateTime?>("UpdatedDate");

                    b.HasKey("Id");

                    b.HasIndex("BkgVehicleId");

                    b.ToTable("BkgCommissionReceiveds");
                });

            modelBuilder.Entity("Numbers.Models.BkgCustomer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccountId");

                    b.Property<string>("Address")
                        .HasMaxLength(500);

                    b.Property<string>("CNIC")
                        .IsRequired()
                        .HasMaxLength(15);

                    b.Property<int>("CompanyId");

                    b.Property<int>("CreatedBy");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("FatherName")
                        .HasMaxLength(150);

                    b.Property<string>("GSTNo")
                        .HasMaxLength(15);

                    b.Property<bool>("IsActive");

                    b.Property<string>("Mobile")
                        .IsRequired()
                        .HasMaxLength(15);

                    b.Property<string>("NTNNo")
                        .HasMaxLength(15);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150);

                    b.Property<string>("Phone")
                        .HasMaxLength(15);

                    b.Property<string>("Remarks")
                        .HasMaxLength(500);

                    b.Property<int?>("UpdatedBy");

                    b.Property<DateTime?>("UpdatedDate");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("CNIC")
                        .IsUnique();

                    b.HasIndex("CompanyId");

                    b.ToTable("BkgCustomers");
                });

            modelBuilder.Entity("Numbers.Models.BkgItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(150);

                    b.Property<string>("ItemCode")
                        .IsRequired()
                        .HasMaxLength(10);

                    b.Property<string>("UOM")
                        .HasMaxLength(15);

                    b.Property<int?>("UpdatedBy");

                    b.Property<DateTime?>("UpdatedDate");

                    b.HasKey("Id");

                    b.ToTable("BkgItems");
                });

            modelBuilder.Entity("Numbers.Models.BkgPayment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BkgVehicleId");

                    b.Property<int>("CompanyId");

                    b.Property<int>("CreatedBy");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<bool>("DebitAccount");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500);

                    b.Property<int>("GLAccountId");

                    b.Property<decimal>("PaymentAmount");

                    b.Property<DateTime>("PaymentDate");

                    b.Property<string>("Reference")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Status")
                        .HasMaxLength(50);

                    b.Property<int?>("UpdatedBy");

                    b.Property<DateTime?>("UpdatedDate");

                    b.Property<int>("VoucherID");

                    b.HasKey("Id");

                    b.HasIndex("BkgVehicleId");

                    b.HasIndex("GLAccountId");

                    b.ToTable("BkgPayments");
                });

            modelBuilder.Entity("Numbers.Models.BkgReceipt", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BkgVehicleId");

                    b.Property<string>("CRAccount")
                        .HasMaxLength(50);

                    b.Property<int>("CompanyId");

                    b.Property<int>("CreatedBy");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<bool>("CreditToAccount");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500);

                    b.Property<int>("GLAccountId");

                    b.Property<string>("ReceiptAccount")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<decimal>("ReceiptAmount");

                    b.Property<DateTime>("ReceiptDate");

                    b.Property<string>("Reference")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Status")
                        .HasMaxLength(50);

                    b.Property<int?>("UpdatedBy");

                    b.Property<DateTime?>("UpdatedDate");

                    b.HasKey("Id");

                    b.HasIndex("BkgVehicleId");

                    b.ToTable("BkgReceipts");
                });

            modelBuilder.Entity("Numbers.Models.BkgVehicle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("AreaCommission");

                    b.Property<string>("BankName")
                        .IsRequired()
                        .HasMaxLength(150);

                    b.Property<decimal>("BookingCommission");

                    b.Property<DateTime>("BookingDate");

                    b.Property<string>("BookingNo");

                    b.Property<string>("BookingType")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<DateTime>("CashBankReceiptDate");

                    b.Property<int>("CompanyId");

                    b.Property<string>("CompanyReceiptNo")
                        .HasMaxLength(50);

                    b.Property<int>("CreatedBy");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<int>("CustomerId");

                    b.Property<DateTime>("DeliveryDate");

                    b.Property<int>("GLAccountId");

                    b.Property<int>("ItemId");

                    b.Property<decimal>("PaymentAmount");

                    b.Property<decimal>("Price");

                    b.Property<int>("ReceiptType");

                    b.Property<decimal>("ReceivedAmount");

                    b.Property<string>("ReferenceNo")
                        .IsRequired()
                        .HasMaxLength(150);

                    b.Property<string>("Remarks")
                        .HasMaxLength(500);

                    b.Property<string>("Status")
                        .HasMaxLength(50);

                    b.Property<int?>("UpdatedBy");

                    b.Property<DateTime?>("UpdatedDate");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("ItemId");

                    b.ToTable("BkgVehicles");
                });

            modelBuilder.Entity("Numbers.Models.BkgVehicleIGP", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BkgVehicleId");

                    b.Property<string>("ChassisNo")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int>("CompanyId");

                    b.Property<int>("CreatedBy");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<decimal>("DeliveryCommission");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500);

                    b.Property<string>("EngineNo")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<DateTime>("IGPDate");

                    b.Property<int>("IGPNo");

                    b.Property<string>("CompanyReferenceNo")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Status")
                        .HasMaxLength(50);

                    b.Property<int?>("UpdatedBy");

                    b.Property<DateTime?>("UpdatedDate");

                    b.Property<int>("VoucherID");

                    b.HasKey("Id");

                    b.HasIndex("BkgVehicleId");

                    b.ToTable("BkgVehicleIGPs");
                });

            modelBuilder.Entity("Numbers.Models.BkgVehicleOGP", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BiltyNo")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int>("BkgVehicleId");

                    b.Property<bool>("CashPurchase");

                    b.Property<int>("CompanyId");

                    b.Property<int>("CreatedBy");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500);

                    b.Property<DateTime>("OGPDate");

                    b.Property<int>("OGPNo");

                    b.Property<bool>("Posted");

                    b.Property<string>("ReceivedBy")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Status")
                        .HasMaxLength(50);

                    b.Property<int?>("UpdatedBy");

                    b.Property<DateTime?>("UpdatedDate");

                    b.Property<string>("VehicleNo")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("BkgVehicleId");

                    b.ToTable("BkgVehicleOGPs");
                });

            modelBuilder.Entity("Numbers.Models.GLAccount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<short>("AccountLevel");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(15);

                    b.Property<int>("CompanyId");

                    b.Property<int>("CreatedBy");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsBank");

                    b.Property<bool>("IsCash");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(false);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150);

                    b.Property<int>("ParentId");

                    b.Property<bool>("RequireCostCenter");

                    b.Property<bool>("RequireSubAccount");

                    b.Property<string>("SubAccountId")
                        .HasMaxLength(50);

                    b.Property<int?>("UpdatedBy");

                    b.Property<DateTime?>("UpdatedDate");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("GLAccounts");
                });

            modelBuilder.Entity("Numbers.Models.GLSubAccount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(10);

                    b.Property<int>("CompanyId");

                    b.Property<int>("CreatedBy");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsDeleted");

                    b.Property<int?>("UpdatedBy");

                    b.Property<DateTime?>("UpdatedDate");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("GLSubAccounts");
                });

            modelBuilder.Entity("Numbers.Models.GLSubAccountDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(10);

                    b.Property<int>("CreatedBy");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<bool>("IsDelete");

                    b.Property<int?>("SubAccountIdId");

                    b.Property<int?>("UpdatedBy");

                    b.Property<DateTime?>("UpdatedDate");

                    b.HasKey("Id");

                    b.HasIndex("SubAccountIdId");

                    b.ToTable("GLSubAccountDetails");
                });

            modelBuilder.Entity("Numbers.Models.GLVoucher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ApprovedBy");

                    b.Property<DateTime?>("ApprovedDate");

                    b.Property<int?>("CompanyId");

                    b.Property<int>("CreatedBy");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasMaxLength(3);

                    b.Property<string>("Description")
                        .HasMaxLength(200);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(false);

                    b.Property<int>("PeriodId");

                    b.Property<string>("Reference")
                        .HasMaxLength(30);

                    b.Property<string>("Status")
                        .HasMaxLength(10);

                    b.Property<int?>("UpdatedBy");

                    b.Property<DateTime?>("UpdatedDate");

                    b.Property<DateTime>("VoucherDate")
                        .HasColumnType("Date");

                    b.Property<int>("VoucherNo");

                    b.Property<int?>("VoucherTypeId");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("VoucherTypeId");

                    b.ToTable("GLVouchers");
                });

            modelBuilder.Entity("Numbers.Models.GLVoucherDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccountId");

                    b.Property<int>("CreatedBy");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<decimal>("Credit")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18,2)")
                        .HasDefaultValue(0m);

                    b.Property<decimal>("Debit")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18,2)")
                        .HasDefaultValue(0m);

                    b.Property<string>("Description")
                        .HasMaxLength(200);

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(false);

                    b.Property<int?>("ProjectId");

                    b.Property<short?>("Sequence");

                    b.Property<int?>("SubAccountId");

                    b.Property<int?>("UpdatedBy");

                    b.Property<DateTime?>("UpdatedDate");

                    b.Property<int?>("VoucherId");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("VoucherId");

                    b.ToTable("GLVoucherDetails");
                });

            modelBuilder.Entity("Numbers.Models.GLVoucherType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanyId");

                    b.Property<int>("CreatedBy");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<int>("Description")
                        .HasMaxLength(50);

                    b.Property<int>("IsActive");

                    b.Property<int>("IsSystem");

                    b.Property<int>("ReferenceNarration")
                        .HasMaxLength(20);

                    b.Property<int?>("UpdatedBy");

                    b.Property<DateTime?>("UpdatedDate");

                    b.Property<int>("VoucherType")
                        .HasMaxLength(4);

                    b.HasKey("Id");

                    b.ToTable("GLVoucherTypes");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Numbers.Models.ApplicationUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Numbers.Models.ApplicationUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Numbers.Models.ApplicationUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Numbers.Models.ApplicationUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Numbers.Models.AppAuditTrial", b =>
                {
                    b.HasOne("Numbers.Models.AppCompany", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId");
                });

            modelBuilder.Entity("Numbers.Models.AppCurrencyExchangeRate", b =>
                {
                    b.HasOne("Numbers.Models.AppCompany", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId");

                    b.HasOne("Numbers.Models.AppCurrency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId");
                });

            modelBuilder.Entity("Numbers.Models.AppRoleMenu", b =>
                {
                    b.HasOne("Numbers.Models.AppMenu", "Menu")
                        .WithMany()
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Numbers.Models.AppUserCompany", b =>
                {
                    b.HasOne("Numbers.Models.AppCompany", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Numbers.Models.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Numbers.Models.BkgCashPurchaseSale", b =>
                {
                    b.HasOne("Numbers.Models.BkgCustomer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Numbers.Models.BkgItem", "Item")
                        .WithMany()
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Numbers.Models.BkgCommissionPayment", b =>
                {
                    b.HasOne("Numbers.Models.BkgVehicle", "BkgVehicle")
                        .WithMany("BkgCommissionPayments")
                        .HasForeignKey("BkgVehicleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Numbers.Models.BkgCommissionReceived", b =>
                {
                    b.HasOne("Numbers.Models.BkgVehicle", "BkgVehicle")
                        .WithMany("BkgCommissionReceiveds")
                        .HasForeignKey("BkgVehicleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Numbers.Models.BkgCustomer", b =>
                {
                    b.HasOne("Numbers.Models.GLAccount", "Account")
                        .WithMany("bkgCustomers")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Numbers.Models.AppCompany", "Company")
                        .WithMany("bkgCustomers")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Numbers.Models.BkgPayment", b =>
                {
                    b.HasOne("Numbers.Models.BkgVehicle", "BkgVehicle")
                        .WithMany("BkgPayments")
                        .HasForeignKey("BkgVehicleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Numbers.Models.GLAccount", "GLAccount")
                        .WithMany("bkgPayments")
                        .HasForeignKey("GLAccountId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Numbers.Models.BkgReceipt", b =>
                {
                    b.HasOne("Numbers.Models.BkgVehicle", "BkgVehicle")
                        .WithMany("BkgReceipts")
                        .HasForeignKey("BkgVehicleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Numbers.Models.BkgVehicle", b =>
                {
                    b.HasOne("Numbers.Models.BkgCustomer", "Customer")
                        .WithMany("BkgVehicles")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Numbers.Models.BkgItem", "Item")
                        .WithMany("BkgVehicles")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Numbers.Models.BkgVehicleIGP", b =>
                {
                    b.HasOne("Numbers.Models.BkgVehicle", "BkgVehicle")
                        .WithMany("BkgVehicleIGPs")
                        .HasForeignKey("BkgVehicleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Numbers.Models.BkgVehicleOGP", b =>
                {
                    b.HasOne("Numbers.Models.BkgVehicle", "BkgVehicle")
                        .WithMany("BkgVehicleOGPs")
                        .HasForeignKey("BkgVehicleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Numbers.Models.GLAccount", b =>
                {
                    b.HasOne("Numbers.Models.AppCompany", "Company")
                        .WithMany("glAccounts")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Numbers.Models.GLSubAccount", b =>
                {
                    b.HasOne("Numbers.Models.AppCompany", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Numbers.Models.GLSubAccountDetail", b =>
                {
                    b.HasOne("Numbers.Models.GLSubAccount", "SubAccountId")
                        .WithMany()
                        .HasForeignKey("SubAccountIdId");
                });

            modelBuilder.Entity("Numbers.Models.GLVoucher", b =>
                {
                    b.HasOne("Numbers.Models.AppCompany", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId");

                    b.HasOne("Numbers.Models.GLVoucherType", "VoucherType")
                        .WithMany()
                        .HasForeignKey("VoucherTypeId");
                });

            modelBuilder.Entity("Numbers.Models.GLVoucherDetail", b =>
                {
                    b.HasOne("Numbers.Models.GLAccount", "Account")
                        .WithMany()
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Numbers.Models.GLVoucher", "Voucher")
                        .WithMany()
                        .HasForeignKey("VoucherId");
                });
#pragma warning restore 612, 618
        }
    }
}
